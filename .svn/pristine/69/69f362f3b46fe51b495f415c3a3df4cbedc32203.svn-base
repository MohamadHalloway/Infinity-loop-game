package jpp.infinityloop.adapter;

import jpp.infinityloop.BacktrackingSolver;
import jpp.infinityloop.Board;
import jpp.infinityloop.Tile;
import jpp.infinityloop.generatoren.BoardGenerator;

import java.util.Arrays;

public class TestAdapter implements ITestAdapter<Board> {

    private BoardGenerator boardGenerator;

    @Override
    public Board decode(byte[] data) {
        BlobCoder blobCoder = new BlobCoder();
            return blobCoder.decode(data);
    }

    @Override
    public byte[] encode(Board board) {
        BlobCoder blobCoder = new BlobCoder();
        return blobCoder.encode(board);
    }

    @Override
    public boolean solve(Board board) {
        BacktrackingSolver backtrackingSolver = new BacktrackingSolver();
        return backtrackingSolver.solve(board);
    }

    @Override
    public void initGenerator(int minWidth, int maxWidth, int minHeight, int maxHeight) {

    }

    @Override
    public Board generate() {
        return null;
    }

    @Override
    public void rotate(Board board, int column, int row) {
            board.rotate(column,row);
    }


}
